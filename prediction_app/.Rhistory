headlines_text
headlines = html_nodes(webpage, 'div.article_body')
headlines_text = html_text(headlines)
headlines_text
headlines = html_nodes(webpage, 'div.article-body')
headlines_text = html_text(headlines)
headlines_text
headlines = html_nodes(webpage, 'div.article-body.p')
headlines_text = html_text(headlines)
headlines_text
headlines = html_nodes(webpage, 'div.article-body')
headlines_text = html_text(headlines)
headlines_text
url = 'http://www.espn.com/nba/insider/story/_/id/20343849/2018-nba-mock-draft-michael-porter-marvin-bagley-luka-doncic-more'
webpage = read_html(url)
article = html_nodes(webpage, 'div.article-body')
article_text = html_text(article)
article_text
html = read_html('http://www.espn.com/nba/insider/story/_/id/20343849/2018-nba-mock-draft-michael-porter-marvin-bagley-luka-doncic-more.html')
player = html_nodes(html, xpath = '//*[@id="article-feed"]/article[1]/div/div[3]/p[9]/b[1]')
html_text(player)
article_text
pgsession = html_session(url)
pgform = html_form(pgsession)[[1]]
filled_form <- set_values(pgform,
`ctl00$Header2$HeaderTop1$tbUsername` = "myemail@gmail.com",
`ctl00$Header2$HeaderTop1$tbPassword` = "mypassword")
pgform = html_form(pgsession)
filled_form <- set_values(pgform,
`ctl00$Header2$HeaderTop1$tbUsername` = "myemail@gmail.com",
`ctl00$Header2$HeaderTop1$tbPassword` = "mypassword")
url = 'http://www.espn.com/nba/insider/story/_/id/20343849/2018-nba-mock-draft-michael-porter-marvin-bagley-luka-doncic-more'
pgsession = html_session(url)
pgform = html_form(pgsession)
pgform
x =4
x
library("pwr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
x <- 4
is.integer(x)
x <- 4
class(x)
is.integer(x)
x <- 4
class(x)
is.integer(x)
coke_weights <- read.txt('/Users/chrisfeller/Desktop/galvanize/Week2/Day4/dsi-power-bayesian/data/coke_weights.txt')
coke_weights <- read.table('/Users/chrisfeller/Desktop/galvanize/Week2/Day4/dsi-power-bayesian/data/coke_weights.txt')
edit(coke_weights)
View(coke_weights)
sample_mean
sample_mean <-  mean(coke_weights)
class(coke_weights)
sample_mean <-  mean(coke_weights$V1)
sample_mean
sample_size = pwr.t.test(n=len(coke_weights), d=abs(mean-20.4), sig_level=0.05, power=0.8, type='one.sample')
library(pwr)
sample_size = pwr.t.test(n=len(coke_weights), d=abs(mean-20.4), sig_level=0.05, power=0.8, type='one.sample')
sample_size
library(pwr)
sample_size = pwr.t.test(n=len(coke_weights), d=abs(mean-20.4), sig.level=0.05, power=0.8, type='one.sample')
sample_size
sample_size = pwr.t.test(n=length(coke_weights), d=abs(mean-20.4), sig.level=0.05, power=0.8, type='one.sample')
sample_size
library(pwr)
sample_size = pwr.t.test(n=length(coke_weights), d=abs(sample_mean-20.4), sig.level=0.05, power=0.8, type='one.sample')
sample_size
library(pwr)
sample_size = pwr.t.test(d=abs(sample_mean-20.4), sig.level=0.05, power=0.8, type='one.sample')
sample_size
library(pwr)
sample_size = pwr.t.test(n=length(coke_weights), d=abs(sample_mean-20.4), sig.level=0.05, type='one.sample')
sample_size
library(pwr)
sample_size = pwr.t.test(n=length(coke_weights), d=abs(sample_mean-20.4), sig.level=0.05)
sample_size
sample_size = pwr.t.test(n=length(coke_weights), d=abs(sample_mean-20.4), sig.level=0.05, type='one.sample')
sample_size
shiny::runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Corretion_App/app/app2.R')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Corretion_App/app/app2.R')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Corretion_App/app/app2.R')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Corretion_App/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Correlation_Dashboard/app')
runApp('Desktop/NBA_Corretion_App/app/app')
runApp('Desktop/NBA_Corretion_App/app/app')
runApp('Desktop/NBA_Corretion_App/app/app')
runApp('Desktop/NBA_Corretion_App/app/app')
runApp('Desktop/NBA_Correlation_App/app/app')
runApp('Desktop/NBA_Correlation_App/app')
runApp('Desktop/NBA_Correlation_App/app')
runApp('Desktop/NBA_Correlation_App/app')
shiny::runApp('Desktop/nba_projects/apps/player')
update.packages()
shiny::runApp('Desktop/nba_projects/apps/player')
shiny::runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
shiny::runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
packages.install('hrbrthemes')
package.install('hrbrthemes')
install.packages('hrbrthemes')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
install.packages('"gdtools"')
install.packages('gdtools')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
install.packages("installr")
library(installr)
updateR()
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
position = read.csv(paste0(file_path, 'nba/basketball_reference/player_data/positional_estimates/player_position_estimates.csv'),
stringsAsFactors = FALSE)
runApp('Desktop/nba_projects/apps/player')
projection = read.csv('/Users/chrisfeller/Desktop/nba_projects/modeling/player_projection_model/chris/modeling/predictions/actuals_and_predictions.csv', stringsAsFactors = FALSE)
position = read.csv(paste0(file_path, 'nba/basketball_reference/player_data/positional_estimates/player_position_estimates.csv'),
stringsAsFactors = FALSE)
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
shiny::runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/NBA_Correlation_App/app')
runApp('Desktop/nba_projects/apps/player')
runApp('Desktop/NBA_Correlation_App/app')
runApp('Desktop/NBA_Correlation_App/app')
runApp('Desktop/NBA_Correlation_App/app')
runApp('Desktop/NBA_Correlation_App/app')
runApp('Desktop/NBA_Correlation_App/app')
runApp('Desktop/NBA_Correlation_App/app')
runApp('Desktop/NBA_Correlation_App/app')
runApp('Desktop/NBA_Correlation_App/app')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='chrisfeller', token='CAE606FC92C5D42F318733F80C99657D', secret='Z8CmEstCnghdcJXVjYE63d6mXrVp/QQpoCaiaZML')
library(rsconnect)
rsconnect::deployApp('/Users/chrisfeller/Desktop/NBA_Correlation_App/app')
library(rsconnect)
rsconnect::deployApp('/Users/chrisfeller/Desktop/NBA_Correlation_App/app/app.R')
library(rsconnect)
rsconnect::deployApp('/Users/chrisfeller/Desktop/NBA_Correlation_App')
library(rsconnect)
rsconnect::deployApp('/Users/chrisfeller/Desktop/NBA_Correlation_App/app/app.R')
library(rsconnect)
rsconnect::deployApp('/Users/chrisfeller/Desktop/NBA_Correlation_App/app')
library(rsconnect)
rsconnect::deployApp('/Users/chrisfeller/Desktop/NBA_Correlation_App/app/')
getwd()
library(rsconnect)
rsconnect::deployApp('/Desktop/NBA_Correlation_App/app/')
library(rsconnect)
rsconnect::deployApp('Desktop/NBA_Correlation_App/app/')
runApp('Desktop/NBA_Correlation_App/app')
library(rsconnect)
rsconnect::deployApp("/Users/chrisfeller/Desktop/NBA_Correlation_App/app")
library(rsconnect)
rsconnect::deployApp("/Users/chrisfeller/Desktop/NBACorrelationApp/app/app.R")
library(rsconnect)
rsconnect::deployApp("/Users/chrisfeller/Desktop/NBACorrelationApp/app/")
library(rsconnect)
rsconnect::deployApp("/Users/chrisfeller/Desktop/NBACorrelationApp/app")
library(rsconnect)
rsconnect::deployApp("/Users/chrisfeller/Desktop/NBA_Correlation_App/app/app.R")
library(rsconnect)
rsconnect::deployApp("/Users/chrisfeller/Desktop/NBA_Correlation_App/app")
library(rsconnect)
rsconnect::deployApp("/Users/chrisfeller/Desktop/NBA_Correlation_App/app/correlation_app.R")
library(rsconnect)
rsconnect::deployApp("/Users/chrisfeller/Desktop/NBA_Correlation_App/app/")
library(rsconnect)
rsconnect::deployApp("/Users/chrisfeller/Desktop/NBA_Correlation_App/app")
library(rsconnect)
rsconnect::deployApp("/Users/chrisfeller/Desktop/NBA_Correlation_App/correlation_app")
setwd('/Users/chrisfeller/Desktop/League_Strength/prediction_app/')
# Read in predictions
prediction_df <- read.csv('data/predictions.csv', check.names=FALSE)
predictions_df
prediction_df
unique(predictions$LEAGUE)
unique(prediction_df$LEAGUE)
sort(unique(prediction_df$LEAGUE))
shiny::runApp()
runApp()
runApp()
ranking_df <- prediction_df %>%
group_by(LEAGUE) %>%
summarise(MEDIAN_PREDICTION=median(PREDICTION))
ranking_df
%paste
ranking_df <- prediction_df %>%
group_by(LEAGUE) %>%
summarise(MEDIAN_PREDICTION=median(PREDICTION)) %>%
order(MEDIAN_PREDICTION)
ranking_df.columns
names(ranking_df)
ranking_df <- prediction_df %>%
group_by(LEAGUE) %>%
summarise(MEDIAN_PREDICTION=median(PREDICTION)) %>%
order('MEDIAN_PREDICTION')
ranking_df <- prediction_df %>%
group_by(LEAGUE) %>%
summarise(MEDIAN_PREDICTION=median(PREDICTION)) %>%
order(MEDIAN_PREDICTION)
ranking_df <- prediction_df %>%
group_by(LEAGUE) %>%
summarise(MEDIAN_PREDICTION=median(PREDICTION)) %>%
arrange(MEDIAN_PREDICTION)
ranking_df
ranking_df <- prediction_df %>%
group_by(LEAGUE) %>%
summarise(MEDIAN_PREDICTION=median(PREDICTION)) %>%
arrange(MEDIAN_PREDICTION, ascending=FALSE)
ranking_df <- prediction_df %>%
group_by(LEAGUE) %>%
summarise(MEDIAN_PREDICTION=median(PREDICTION)) %>%
arrange(desc(MEDIAN_PREDICTION))
ranking_df
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
prediction_df
select(filter(prediction_df, LEAGUE == input$league1))
select(filter(prediction_df, LEAGUE == 'NBA'))
blah = select(filter(prediction_df, LEAGUE == 'NBA'))
blah
View(blah)
View(blah)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
names(prediction_df)
prediction_df$PREDICTION.mean
prediction_df$PREDICTION.mean()
mean(prediction_df$PREDICTION)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/NBA_Correlation_App/correlation_app')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/NBA_Correlation_App/correlation_app')
prediction_df <- read.csv('data/predictions.csv', check.names=FALSE)
ranking_df <- prediction_df %>%
group_by(LEAGUE) %>%
summarise(MEDIAN_PREDICTION=round(median(PREDICTION), 3)) %>%
arrange(desc(MEDIAN_PREDICTION)) %>%
rename('MEDIAN PREDICTION' = MEDIAN_PREDICTION)
names(ranking_df)
runApp()
prediction_df <- read.csv('data/predictions.csv', check.names=FALSE) %>%
mutate(LEAGUE=replace(LEAGUE, LEAGUE=='NBA_PLAYOFF', 'NBA PLAYOFF'))
prediction_df
prediction_df <- read.csv('data/predictions.csv', check.names=FALSE) %>%
mutate(LEAGUE=replace(LEAGUE, LEAGUE=='NBA_PLAYOFF', 'NBA_2PLAYOFF'))
prediction_df <- read.csv('data/predictions.csv', check.names=FALSE) %>%
mutate(LEAGUE2=replace(LEAGUE, LEAGUE=='NBA_PLAYOFF', 'NBA PLAYOFF'))
prediction_df <- read.csv('data/predictions.csv', check.names=FALSE) %>%
mutate(LEAGUE = str_replace(LEAGUE, '_', ' '))
unique(prediction_df['LEAGUE'])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
deployApp()
library(rsconnect)
deployApp()
rsconnect::setAccountInfo(name='chrisfeller', token='CAE606FC92C5D42F318733F80C99657D', secret='Z8CmEstCnghdcJXVjYE63d6mXrVp/QQpoCaiaZML')
library(rsconnect)
deployApp()
runApp()
library(rsconnect)
deployApp()
